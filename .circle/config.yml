version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.8
      - image: neo4j:$NEO4J_VERSION
        environment:
          NEO4J_AUTH: none
          NEO4J_HEAP_MEMORY: 256
          NEO4J_CACHE_MEMORY: 256M

    working_directory: /go/src/github.com/Financial-Times/relations-api
    environment:
          NEO4J_TEST_URL: "http://localhost:7474/db/data/"
          CIRCLE_TEST_REPORTS: /tmp/test-reports
          CIRCLE_ARTIFACTS: /tmp/artifacts

    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            go get github.com/mattn/goveralls
            go get -u github.com/jstemmer/go-junit-report
            go get -u github.com/kardianos/govendor
      - run:
          name: Create test folder
          command: mkdir -p $CIRCLE_TEST_REPORTS
      - run:
          name: Govendor Sync
          command: govendor sync -v
      - run:
          name: Go Build
          command: go build -v
      - run:
          wget --retry-connrefused --no-check-certificate -T 60 $NEO4J_TEST_URL; curl $NEO4J_TEST_URL
      - run:
          wget https://raw.githubusercontent.com/Financial-Times/cookiecutter-upp-golang/master/coverage.sh && chmod +x coverage.sh
      - run: |
          mkdir -p $CIRCLE_TEST_REPORTS/golang
          mkdir -p $CIRCLE_ARTIFACTS
          govendor test -race -v +local | go-junit-report > $CIRCLE_TEST_REPORTS/golang/junit.xml
          ./coverage.sh
      - run: |
          goveralls -coverprofile=$CIRCLE_ARTIFACTS/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - store_test_results:
          path: /tmp/test-reports

      - store_artifacts:
          path: /tmp/artifacts
          destination: build

  docker_build:
    working_directory: /relations-api
    docker:
      - image: docker:1.12.6-git
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .

workflows:
  version: 2
  tests_and_docker:
    jobs:
      - build
      - docker_build:
          requires:
            - build